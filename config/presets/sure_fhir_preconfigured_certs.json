{
  "title": "UdapEd Server + SureFhir Certs",
  "id": null,
  "test_suite_id": "udap_security",
  "inputs": [
    {
      "name": "udap_fhir_base_url",
      "value": "https://identity-matching.fast.hl7.org/fhir",
      "_title": "FHIR Server Base URL",
      "_description": "Base FHIR URL of FHIR Server. Discovery request will be sent to {baseURL}/.well-known/udap",
      "_type": "text"
    },
    {
      "name": "udap_community_parameter",
      "value": "udap://stage.healthtogo.me/",
      "_title": "UDAP Community Parameter",
      "_description": "If included, the designated community value will be appended as a query to the well-known\n          endpoint to indicate the client's trust of certificates from this trust community.",
      "_type": "text",
      "_optional": true
    },
    {
      "name": "flow_type_auth_code",
      "value": [
        "authorization_code"
      ],
      "_title": "Required OAuth2.0 Flow Type for Authorization Code Workflow",
      "_description": "Which grant type(s) must be supported per the returned Discovery metadata",
      "_type": "checkbox",
      "_optional": false,
      "_options": {
        "list_options": [
          {
            "label": "Authorization Code",
            "value": "authorization_code"
          },
          {
            "label": "Client Credentials",
            "value": "client_credentials"
          }
        ]
      },
      "_locked": true
    },
    {
      "name": "udap_server_trust_anchor_certs",
      "value": "-----BEGIN CERTIFICATE-----\nMIIF4DCCA8igAwIBAgIIC7cAbiIvVFwwDQYJKoZIhvcNAQELBQAwgZgxCzAJBgNV\nBAYTAlVTMQswCQYDVQQIEwJDQTESMBAGA1UEBxMJU2FuIERpZWdvMRMwEQYDVQQK\nEwpFTVIgRGlyZWN0MTYwNAYDVQQLEy1DZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAo\nY2VydHMuZW1yZGlyZWN0LmNvbSkxGzAZBgNVBAMTEkVNUiBEaXJlY3QgVGVzdCBD\nQTAeFw0xNDA0MjQxNjI5MjBaFw0yOTA0MjQxNjI5MjBaMIGzMQswCQYDVQQGEwJV\nUzETMBEGA1UECAwKQ2FsaWZvcm5pYTESMBAGA1UEBwwJU2FuIERpZWdvMRMwEQYD\nVQQKDApFTVIgRGlyZWN0MT8wPQYDVQQLDDZUZXN0IFBLSSBDZXJ0aWZpY2F0aW9u\nIEF1dGhvcml0eSAoY2VydHMuZW1yZGlyZWN0LmNvbSkxJTAjBgNVBAMMHEVNUiBE\naXJlY3QgVGVzdCBDbGllbnQgU3ViQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAw\nggEKAoIBAQCPwkP36KVBwdb9dNsKAhqEoVtMEdL4Ee01tB7y6gIINi3ZGbqhw/lF\nJjRS/fi+SqN8SkjZMkLl6ET9aTM5W+y7aXl+3iqn+dKsesS+kinTAfD4cSI2R4WK\n5HBomEf+PR3scewFKMBbguYW2I42tKPLMwI6L+kMRlQhI3sK4Fyj6M6gUqPaKlx7\nsGPQ/qr8PLwU3doCrC65avSmuC+y5jpbCkJ1kk+g4DLcO+TXx8oC2aVrMRFdD+lx\nNiShdlo5hzhiIGUZmyVe08vLTLB9LGCHz1w9+oqteco4aerYbOlZQxe9d0f7xlZa\nhj7DDfmkqLEFKRQXOJFQtcdCFp3XrXbDAgMBAAGjggEPMIIBCzBQBggrBgEFBQcB\nAQREMEIwQAYIKwYBBQUHMAKGNGh0dHA6Ly9jZXJ0cy5lbXJkaXJlY3QuY29tL2Nl\ncnRzL0VNUkRpcmVjdFRlc3RDQS5jcnQwHQYDVR0OBBYEFKOVbWu9K1HN4c/lkG/X\nJk+/3T7eMA8GA1UdEwEB/wQFMAMBAf8wHwYDVR0jBBgwFoAUMdaEL0mYbgAB0Geh\n+J4csG+noqwwEQYDVR0gBAowCDAGBgRVHSAAMEMGA1UdHwQ8MDowOKA2oDSGMmh0\ndHA6Ly9jZXJ0cy5lbXJkaXJlY3QuY29tL2NybC9FTVJEaXJlY3RUZXN0Q0EuY3Js\nMA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsFAAOCAgEAKAjGzW0AEdMKRjKx\niEzS5SQqmHmAYmajowd38wac4udD3TMvf3tHMZfkGy3ulZSQ40LyjXa60s9/5508\nbwFGHBejyfo1vnc2FJA/0KcmlKzhwhmpe7QoZ1T7uWwG+Y98TRzL7wF8mzCUT+Fe\nMFP35xL3IIJ3CKzIkC9Wv+6kSgkobNoAJyUECbVtmxJer2/LmzfXsYI0NQ3QmeZL\npYoo4EOmIXpoWUSeZHh3av3guoy16s+bs5UuFQ2NfJeuD1n+uQBaNRchR3DxshEK\n66RiKu+QjdBrq0aoTXIT2MYKGiVEbYQlJuDuxilXLYlcYTcDpPIS7hh95bmAxRho\nwgbr3E3dsNgvMuANlgUJno5vyMr9P5zu+kDbJ8nB2fm5/LjXLmNvOy+rj8jCLbuP\nGS/vWxfvi21l4Xfmphi6skeq6JyIUPAm/U6bkR8LF5+/aVoIXUvkRHqbyBzDDDWc\n4+LjI4+INFK+Lxj/cwvh398Ko4LCA0KenJDBFN0Je/rz92uK867sgcQ7dreOK8pf\ngqWulL9H4kCkoZZF4367x2SQVQPWPExefQrpPwk6AlJTHocFqm1TUvmjTwCxmXWr\nztkq2GRxsmT6/2n5TrmHabl6cXDKtmnhS3k9FGFA556YowwJSEm9pKexguxqcyrg\nPPKM/j6ERtHoHDSMKT0frOoawoY=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIGZjCCBE6gAwIBAgIBATANBgkqhkiG9w0BAQsFADCBmDELMAkGA1UEBhMCVVMx\nCzAJBgNVBAgTAkNBMRIwEAYDVQQHEwlTYW4gRGllZ28xEzARBgNVBAoTCkVNUiBE\naXJlY3QxNjA0BgNVBAsTLUNlcnRpZmljYXRpb24gQXV0aG9yaXR5IChjZXJ0cy5l\nbXJkaXJlY3QuY29tKTEbMBkGA1UEAxMSRU1SIERpcmVjdCBUZXN0IENBMB4XDTEy\nMDkwNjA0MzEzNloXDTMyMDkwNjA0MzEzNlowgZgxCzAJBgNVBAYTAlVTMQswCQYD\nVQQIEwJDQTESMBAGA1UEBxMJU2FuIERpZWdvMRMwEQYDVQQKEwpFTVIgRGlyZWN0\nMTYwNAYDVQQLEy1DZXJ0aWZpY2F0aW9uIEF1dGhvcml0eSAoY2VydHMuZW1yZGly\nZWN0LmNvbSkxGzAZBgNVBAMTEkVNUiBEaXJlY3QgVGVzdCBDQTCCAiIwDQYJKoZI\nhvcNAQEBBQADggIPADCCAgoCggIBALugk56Hoot6yEEohbRQdQP6sMTCzXOSgxHr\neYI4h00EhMb8x8VzD/ZCEdgmrwa6y1WE7WaPdTcX/jCd0GNUwgqPz7sLP2NeTA9k\ngn/m0kXvxIgzaEhJntdqdvzHqlhtIMAURAu9erAfMn0giK7zwtSg5bYwC09tyv4d\nRIAX9UuvOpOqJnQk9DRRd64+9EKkX9Zj1lqT0/Wjr0w3jcGYN02dB03T4WARZEug\nzkBzPcmYPLhl09gRrgQg8msgTQi68vR+UKNUoQhRJAkk/CAqkMT8Uzuae/W7utYk\n4/vmiJEHoC7OV7yGa7VrD0HhjDzfs53kdnnzlo6MB+6oGFtIKaMF4D8GVSr+MY/p\na+C2dkqf4y3Pr3hqM3t4vgmr/eg0dhzh9+z4lpEZz9ciWcOXwjmxec3OFanvMOeG\n4OhKRiGIj/mVkDEWlC3tcdP22DtGk/RHGOJHkf6qKFxeNDOFHUdTpiXldAl3cUg9\nBNAlUnWHFwim+byxxVYzmXs/8KfLfOp6xIFjI/eddNE7/avQWoEkOapgUDfaixWi\nI1d40QGKJr0d1Yo+W5VxzzufJp5iC/4EmlYzaK9+dVOtfQGfNWaXmfYa8H7krcrW\ncvp0ando4Reh3a+qpybvBVyRJree1WODQHqs7J2lx9quyVfI3Box3uc/Hw2xxdjx\nV3cUsvd5AgMBAAGjgbgwgbUwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\nAQYwHQYDVR0OBBYEFDHWhC9JmG4AAdBnofieHLBvp6KsMB8GA1UdIwQYMBaAFDHW\nhC9JmG4AAdBnofieHLBvp6KsMD8GA1UdHwQ4MDYwNKAyoDCGLmh0dHA6Ly9jZXJ0\ncy5lbXJkaXJlY3QuY29tL0VNUkRpcmVjdFRlc3RDQS5jcmwwEQYDVR0gBAowCDAG\nBgRVHSAAMA0GCSqGSIb3DQEBCwUAA4ICAQBsXbY8B7FcIskyeB/CGEI77GaDMDfK\nWGseJJYlJYz2FeIJgPtqdPhzn0jhQUVcwr//gC5j1aARlussG3gMr8OajpSpOqqf\nXEjzuITeq+Hxsp+ursiJXOZKhurY5NJKZ30ulFDxOZ97bWVUYPTfyy1qUrsqnNlW\n8LJcCnNzZ2uDSJn32FugUtWe0EEgRM10/8Q2IJXLuIhEQLbwl6q7PcDiPkT/yVh/\n9L6ul2bO/ZXp7DeSPeOafWOuCoTNbKxgBuljajm2VNB5+Xx/rSuPnoTRhsaXhke+\nnb3ZbGHJ2ZRu/Q45+OB1ws7VednMci25OVo+yVpH8tl2KF9u1JVNtf5mY3//HEwR\n8OfPPRZeQCqquESVrQjZILa6Ot7lVIhoNI6zkZAp3TaWYBi94upVkeA9uqVIC7cB\npiOz+6XXRDdJDMuh6xsA2tq2E5BY51H5pfskXBBGgHxDQ56R3RskZ7q/NaKSiqBA\nInueG7TVW+dR++rT2n9wkzJHKpA+YS0zHodvIoB71KNq1P/9choCMcBrNph5n32C\n8DpOlF+hi3kOkwjwchfkzC5XS+Zio5VYOyCV1C+CYJ7sw1psk1yYAWPm9rnUmfrm\nO27HXv6lW0Z9EpeUu++52CSYjZsx3E4J1FR0TulzsD8BQtFRL6aPfuSg85okOsxw\nb/p0AdITxRO0vQ==\n-----END CERTIFICATE-----",
      "_title": "Auth Server Trust Anchor X509 Certificate(s) (PEM Format)",
      "_description": "\n            A list of one or more trust anchor root CA X.509 certificates, separated by a newline. Inferno will use\n            these to establish\n            trust with the authorization server's certificates provided in the discovery response signed_metadata JWT.\n          ",
      "_type": "textarea",
      "_optional": true
    },
    {
      "name": "udap_auth_code_flow_registration_grant_type",
      "value": "authorization_code",
      "_title": "Client Registration Grant Type",
      "_description": "\n            The OAuth2.0 grant type for which this client will register itself. A given client may register as either\n             option, but not both.\n          ",
      "_type": "radio",
      "_options": {
        "list_options": [
          {
            "label": "Authorization Code",
            "value": "authorization_code"
          },
          {
            "label": "Client Credentials",
            "value": "client_credentials"
          }
        ]
      },
      "_locked": true
    },
    {
      "name": "udap_auth_code_flow_client_registration_status",
      "value": "update",
      "_title": "Client Registration Status",
      "_description": "\n            If the client's iss and certificate combination has already been registered with the authorization server\n            prior to this test run, select 'Update'.\n          ",
      "_type": "radio",
      "_options": {
        "list_options": [
          {
            "label": "New Registration (201 Response Code Expected)",
            "value": "new"
          },
          {
            "label": "Update Registration (200 or 201 Response Code Expected)",
            "value": "update"
          }
        ]
      }
    },
    {
      "name": "udap_auth_code_flow_cert_iss",
      "value": "https://fhirlabs.net:7016/fhir/r4",
      "_title": "Authorization Code JWT Issuer (iss) Claim",
      "_description": "\n            MUST correspond to a unique URI entry in the Subject Alternative Name (SAN) extension of the client\n            certificate used for registration.\n          ",
      "_type": "text",
      "_optional": false
    },
    {
      "name": "udap_auth_code_flow_client_keyset_source",
      "value": "SureFhir",
      "_title": "Authorization Code Client Cert & Private Key Source",
      "_type": "radio",
      "_options": {
        "list_options": [
          {
            "label": "Provide Custom Cert(s) and Private Key",
            "value": "Custom"
          },
          {
            "label": "SureFhir Test Client Cert and Private Key",
            "value": "SureFhir"
          },
          {
            "label": "EMR Direct Test Client Cert and Private Key",
            "value": "EMRDirect"
          }
        ]
      }
    },
    {
      "name": "udap_auth_code_flow_client_cert_pem",
      "value": null,
      "_title": "Authorization Code Client Certificate(s) (PEM Format)",
      "_description": "\n            A list of one or more X.509 certificates in PEM format separated by a newline. The first (leaf) certificate\n            MUST represent the client entity Inferno will register as,\n            and the trust chain that will be built from the provided certificate(s) must resolve to a CA trusted by the\n            authorization server under test.\n          ",
      "_type": "textarea",
      "_optional": true
    },
    {
      "name": "udap_auth_code_flow_client_private_key",
      "value": null,
      "_title": "Authorization Code Client Private Key (PEM Format)",
      "_description": "\n          The private key corresponding to the client certificate used for registration, in PEM format.  Used to sign\n          registration and/or authentication JWTs.\n          ",
      "_type": "textarea",
      "_optional": true
    },
    {
      "name": "udap_auth_code_flow_registration_scope",
      "value": "patient/*.read",
      "_title": "Authorization Code Registration Requested Scope(s)",
      "_description": "\n                  String containing a space delimited list of scopes requested by the client application for use in\n                  subsequent requests. The Authorization Server MAY consider this list when deciding the scopes that it\n                  will allow the application to subsequently request. Apps requesting the \"authorization_code\" grant\n                  type SHOULD request user or patient scopes.\n                ",
      "_type": "text"
    },
    {
      "name": "udap_jwt_signing_alg",
      "value": "RS256",
      "_title": "JWT Signing Algorithm",
      "_description": "\n            Algorithm used to sign UDAP JSON Web Tokens (JWTs). UDAP Implementations SHALL support\n            RS256.\n            ",
      "_type": "radio",
      "_options": {
        "list_options": [
          {
            "label": "RS256",
            "value": "RS256"
          }
        ]
      },
      "_locked": true
    },
    {
      "name": "udap_auth_code_flow_registration_certifications",
      "value": null,
      "_title": "Authorization Code UDAP Registration Certifications",
      "_description": "\n            Additional UDAP certifications to include in registration request, if required by the authorization server.\n             Include a space separated list of strings representing a Base64-encoded, signed JWT.\n            ",
      "_type": "textarea",
      "_optional": true
    },
    {
      "name": "udap_authorization_code_request_scopes",
      "value": "patient/AllergyIntolerance.read patient/Condition.read",
      "_title": "Scope Parameter for Authorization Request",
      "_description": "\n              A list of space-separated scopes to include in the authorization request. If included, these may be equal\n              to or a subset of the scopes requested during registration.\n              If empty, scope will be omitted as a parameter to the authorization endpoint.\n          ",
      "_type": "text",
      "_optional": true
    },
    {
      "name": "udap_authorization_code_request_aud",
      "value": "include_aud",
      "_title": "Audience ('aud') Parameter for Authorization Request",
      "_description": "\n              If selected, the Base FHIR URL will be used as the 'aud' parameter in the request to the authorization\n              endpoint.\n          ",
      "_type": "checkbox",
      "_optional": true,
      "_options": {
        "list_options": [
          {
            "label": "Include 'aud' parameter",
            "value": "include_aud"
          }
        ]
      }
    },
    {
      "name": "flow_type_client_creds",
      "value": [
        "client_credentials"
      ],
      "_title": "Required OAuth2.0 Flow Type for Client Credentials Workflow",
      "_description": "Which grant type(s) must be supported per the returned Discovery metadata",
      "_type": "checkbox",
      "_optional": "false",
      "_options": {
        "list_options": [
          {
            "label": "Authorization Code",
            "value": "authorization_code"
          },
          {
            "label": "Client Credentials",
            "value": "client_credentials"
          }
        ]
      },
      "_locked": true
    },
    {
      "name": "udap_client_credentials_flow_registration_grant_type",
      "value": "client_credentials",
      "_title": "Client Registration Grant Type",
      "_description": "\n            The OAuth2.0 grant type for which this client will register itself. A given client may register as either\n             option, but not both.\n          ",
      "_type": "radio",
      "_options": {
        "list_options": [
          {
            "label": "Authorization Code",
            "value": "authorization_code"
          },
          {
            "label": "Client Credentials",
            "value": "client_credentials"
          }
        ]
      },
      "_locked": true
    },
    {
      "name": "udap_client_credentials_flow_client_registration_status",
      "value": "update",
      "_title": "Client Registration Status",
      "_description": "\n            If the client's iss and certificate combination has already been registered with the authorization server\n            prior to this test run, select 'Update'.\n          ",
      "_type": "radio",
      "_options": {
        "list_options": [
          {
            "label": "New Registration (201 Response Code Expected)",
            "value": "new"
          },
          {
            "label": "Update Registration (200 or 201 Response Code Expected)",
            "value": "update"
          }
        ]
      }
    },
    {
      "name": "udap_cert_iss_client_creds_flow",
      "value": "https://fhirlabs.net/fhir/r4",
      "_title": "Client Credentials JWT Issuer (iss) Claim",
      "_description": "\n            MUST correspond to a unique URI entry in the Subject Alternative Name (SAN) extension of the client\n            certificate used for registration.\n          ",
      "_type": "text",
      "_optional": false
    },
    {
      "name": "udap_client_credentials_client_keyset_source",
      "value": "SureFhir",
      "_title": "Client Credentials Client Cert & Private Key Source",
      "_type": "radio",
      "_options": {
        "list_options": [
          {
            "label": "Provide Custom Cert(s) and Private Key",
            "value": "Custom"
          },
          {
            "label": "SureFhir Test Client Cert and Private Key",
            "value": "SureFhir"
          },
          {
            "label": "EMR Direct Test Client Cert and Private Key",
            "value": "EMRDirect"
          }
        ]
      }
    },
    {
      "name": "udap_client_credentials_flow_client_cert_pem",
      "value": null,
      "_title": "Client Credentials Client Certificate(s) (PEM Format)",
      "_description": "\n            A list of one or more X.509 certificates in PEM format separated by a newline. The first (leaf) certificate\n            MUST represent the client entity Inferno will register as,\n            and the trust chain that will be built from the provided certificate(s) must resolve to a CA trusted by the\n            authorization server under test.\n          ",
      "_type": "textarea",
      "_optional": true
    },
    {
      "name": "udap_client_credentials_flow_client_private_key",
      "value": null,
      "_title": "Client Credentials Client Private Key (PEM Format)",
      "_description": "\n          The private key corresponding to the client certificate used for registration, in PEM format.  Used to sign\n          registration and/or authentication JWTs.\n          ",
      "_type": "textarea",
      "_optional": true
    },
    {
      "name": "udap_client_credentials_flow_registration_scope",
      "value": "system/*.read",
      "_title": "Client Credentials Registration Requested Scope(s)",
      "_description": "\n                  String containing a space delimited list of scopes requested by the client application for use in\n                  subsequent requests. The Authorization Server MAY consider this list when deciding the scopes that it\n                  will allow the application to subsequently request. Apps requesting the \"client_credentials\" grant\n                  type SHOULD request system scopes.\n                ",
      "_type": "text"
    },
    {
      "name": "udap_client_creds_flow_registration_certifications",
      "value": null,
      "_title": "Client Credentials UDAP Registration Certifications",
      "_description": "\n            Additional UDAP certifications to include in registration request, if required by the authorization server.\n             Include a space separated list of strings representing a Base64-encoded, signed JWT.\n            ",
      "_type": "textarea",
      "_optional": true
    }
  ]
}
